[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "integrify"
packages = [{include = "integrify", from="src"}]
version = "2.0.1"
description = "Integrify API inteqrasiyalarını rahatlaşdıran sorğular kitabaxanasıdır."
license = "GPL-3.0-or-later"
authors = [
    "mmzeynalli <miradil.zeynalli@gmail.com>", 
    "vahidzhe <vahidzhe@gmail.com>"
]
readme = "README.md"
homepage = "https://github.com/mmzeynalli/integrify"
repository = "https://github.com/mmzeynalli/integrify"
documentation = "https://integrify.mmzeynalli.dev/"
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]

[tool.poetry.dependencies]
python = "^3.8"
pydantic = "^2.8.2"
httpx = "^0.27.2"

# Packages needed for Github Actions, for future, we might add others
[tool.poetry.group.gh]
optional = true

[tool.poetry.group.gh.dependencies]
pytest = "^8.1.1"
pytest-mock = "^3.14.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-mock = "^3.14.0"
mypy = "^1.9.0"
ruff = "^0.3.5"
pre-commit = [
    { version = "^3.8.0", python = ">=3.9" },
    { version = "^3.5.0", python = "3.8" }
]
ptpython = "^3.0.29"
bandit = "^1.7.10"
coverage = [
    { version = "^7.6.3", python = ">=3.9" },
    { version = "7.6.1", python = "3.8" }
]
coverage-badge = "^1.1.2"

[tool.poetry.group.docs.dependencies]
mkdocs-material = {extras = ["imaging"], version = "^9.5.36"} 
mkdocstrings = {extras = ["python"], version = "^0.26.1"}
mkdocs-panzoom-plugin = "^0.1.3"

[tool.ruff]
target-version = "py38"
line-length = 100

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Print statements
    "T201"
]
ignore-init-module-imports = true

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.pytest.ini_options]
pythonpath = ["src/"]
filterwarnings = [
    "ignore::UserWarning",
]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
skips = []

